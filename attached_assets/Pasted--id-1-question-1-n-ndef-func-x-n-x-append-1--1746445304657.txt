[{'id': 1,
  'question': '[سؤال 1] ما ناتج الكود التالي ولماذا؟\n\ndef func(x=[]):\n    x.append(1)\n    return x\n\nprint(func())\nprint(func())',
  'options': {'A': '[1] ثم [1]',
   'B': '[1] ثم [1, 1]',
   'C': '[1] ثم Error',
   'D': '[1, 1] ثم [1, 1, 1]'},
  'correct_answer': 'B'},
 {'id': 2,
  'question': '[سؤال 2] ما نوع الاستثناء الذي سيرفعه الكود التالي؟\n\ndef divide(a, b):\n    try:\n        return a / b\n    except:\n        raise\n\nprint(divide(5, 0))',
  'options': {'A': 'ZeroDivisionError',
   'B': 'NameError',
   'C': 'TypeError',
   'D': 'لا يحدث استثناء'},
  'correct_answer': 'A'},
 {'id': 3,
  'question': '[سؤال 3] ما ناتج تنفيذ الكود التالي؟\n\na = [1, 2, 3]\nb = a\na += [4, 5]\n\nprint(a)\nprint(b)',
  'options': {'A': '[1, 2, 3, 4, 5] ثم [1, 2, 3]',
   'B': '[1, 2, 3, 4, 5] ثم [1, 2, 3, 4, 5]',
   'C': '[1, 2, 3, 4, 5] ثم Error',
   'D': '[4, 5] ثم [1, 2, 3]'},
  'correct_answer': 'B'},
 {'id': 4,
  'question': '[سؤال 4] ما نتيجة هذا الكود؟\n\nx = (i*i for i in range(3))\nprint(sum(x) + sum(x))',
  'options': {'A': '5', 'B': '9', 'C': '0', 'D': '18'},
  'correct_answer': 'A'},
 {'id': 5,
  'question': '[سؤال 5] ما نوع البيانات الناتجة من تنفيذ التعبير التالي؟\n\nx = {1, 2, 3} & {2, 3, 4}',
  'options': {'A': 'list', 'B': 'set', 'C': 'tuple', 'D': 'dict'},
  'correct_answer': 'B'},
 {'id': 6,
  'question': '[سؤال 6] ما ناتج الكود التالي ولماذا؟\n\ndef func(x=[]):\n    x.append(1)\n    return x\n\nprint(func())\nprint(func())',
  'options': {'A': '[1] ثم [1]',
   'B': '[1] ثم [1, 1]',
   'C': '[1] ثم Error',
   'D': '[1, 1] ثم [1, 1, 1]'},
  'correct_answer': 'B'},
 {'id': 7,
  'question': '[سؤال 7] ما نوع الاستثناء الذي سيرفعه الكود التالي؟\n\ndef divide(a, b):\n    try:\n        return a / b\n    except:\n        raise\n\nprint(divide(5, 0))',
  'options': {'A': 'ZeroDivisionError',
   'B': 'NameError',
   'C': 'TypeError',
   'D': 'لا يحدث استثناء'},
  'correct_answer': 'A'},
 {'id': 8,
  'question': '[سؤال 8] ما ناتج تنفيذ الكود التالي؟\n\na = [1, 2, 3]\nb = a\na += [4, 5]\n\nprint(a)\nprint(b)',
  'options': {'A': '[1, 2, 3, 4, 5] ثم [1, 2, 3]',
   'B': '[1, 2, 3, 4, 5] ثم [1, 2, 3, 4, 5]',
   'C': '[1, 2, 3, 4, 5] ثم Error',
   'D': '[4, 5] ثم [1, 2, 3]'},
  'correct_answer': 'B'},
 {'id': 9,
  'question': '[سؤال 9] ما نتيجة هذا الكود؟\n\nx = (i*i for i in range(3))\nprint(sum(x) + sum(x))',
  'options': {'A': '5', 'B': '9', 'C': '0', 'D': '18'},
  'correct_answer': 'A'},
 {'id': 10,
  'question': '[سؤال 10] ما نوع البيانات الناتجة من تنفيذ التعبير التالي؟\n\nx = {1, 2, 3} & {2, 3, 4}',
  'options': {'A': 'list', 'B': 'set', 'C': 'tuple', 'D': 'dict'},
  'correct_answer': 'B'},
 {'id': 11,
  'question': '[سؤال 11] ما ناتج الكود التالي ولماذا؟\n\ndef func(x=[]):\n    x.append(1)\n    return x\n\nprint(func())\nprint(func())',
  'options': {'A': '[1] ثم [1]',
   'B': '[1] ثم [1, 1]',
   'C': '[1] ثم Error',
   'D': '[1, 1] ثم [1, 1, 1]'},
  'correct_answer': 'B'},
 {'id': 12,
  'question': '[سؤال 12] ما نوع الاستثناء الذي سيرفعه الكود التالي؟\n\ndef divide(a, b):\n    try:\n        return a / b\n    except:\n        raise\n\nprint(divide(5, 0))',
  'options': {'A': 'ZeroDivisionError',
   'B': 'NameError',
   'C': 'TypeError',
   'D': 'لا يحدث استثناء'},
  'correct_answer': 'A'},
 {'id': 13,
  'question': '[سؤال 13] ما ناتج تنفيذ الكود التالي؟\n\na = [1, 2, 3]\nb = a\na += [4, 5]\n\nprint(a)\nprint(b)',
  'options': {'A': '[1, 2, 3, 4, 5] ثم [1, 2, 3]',
   'B': '[1, 2, 3, 4, 5] ثم [1, 2, 3, 4, 5]',
   'C': '[1, 2, 3, 4, 5] ثم Error',
   'D': '[4, 5] ثم [1, 2, 3]'},
  'correct_answer': 'B'},
 {'id': 14,
  'question': '[سؤال 14] ما نتيجة هذا الكود؟\n\nx = (i*i for i in range(3))\nprint(sum(x) + sum(x))',
  'options': {'A': '5', 'B': '9', 'C': '0', 'D': '18'},
  'correct_answer': 'A'},
 {'id': 15,
  'question': '[سؤال 15] ما نوع البيانات الناتجة من تنفيذ التعبير التالي؟\n\nx = {1, 2, 3} & {2, 3, 4}',
  'options': {'A': 'list', 'B': 'set', 'C': 'tuple', 'D': 'dict'},
  'correct_answer': 'B'},
 {'id': 16,
  'question': '[سؤال 16] ما ناتج الكود التالي ولماذا؟\n\ndef func(x=[]):\n    x.append(1)\n    return x\n\nprint(func())\nprint(func())',
  'options': {'A': '[1] ثم [1]',
   'B': '[1] ثم [1, 1]',
   'C': '[1] ثم Error',
   'D': '[1, 1] ثم [1, 1, 1]'},
  'correct_answer': 'B'},
 {'id': 17,
  'question': '[سؤال 17] ما نوع الاستثناء الذي سيرفعه الكود التالي؟\n\ndef divide(a, b):\n    try:\n        return a / b\n    except:\n        raise\n\nprint(divide(5, 0))',
  'options': {'A': 'ZeroDivisionError',
   'B': 'NameError',
   'C': 'TypeError',
   'D': 'لا يحدث استثناء'},
  'correct_answer': 'A'},
 {'id': 18,
  'question': '[سؤال 18] ما ناتج تنفيذ الكود التالي؟\n\na = [1, 2, 3]\nb = a\na += [4, 5]\n\nprint(a)\nprint(b)',
  'options': {'A': '[1, 2, 3, 4, 5] ثم [1, 2, 3]',
   'B': '[1, 2, 3, 4, 5] ثم [1, 2, 3, 4, 5]',
   'C': '[1, 2, 3, 4, 5] ثم Error',
   'D': '[4, 5] ثم [1, 2, 3]'},
  'correct_answer': 'B'},
 {'id': 19,
  'question': '[سؤال 19] ما نتيجة هذا الكود؟\n\nx = (i*i for i in range(3))\nprint(sum(x) + sum(x))',
  'options': {'A': '5', 'B': '9', 'C': '0', 'D': '18'},
  'correct_answer': 'A'},
 {'id': 20,
  'question': '[سؤال 20] ما نوع البيانات الناتجة من تنفيذ التعبير التالي؟\n\nx = {1, 2, 3} & {2, 3, 4}',
  'options': {'A': 'list', 'B': 'set', 'C': 'tuple', 'D': 'dict'},
  'correct_answer': 'B'},
 {'id': 21,
  'question': '[سؤال 21] ما ناتج الكود التالي ولماذا؟\n\ndef func(x=[]):\n    x.append(1)\n    return x\n\nprint(func())\nprint(func())',
  'options': {'A': '[1] ثم [1]',
   'B': '[1] ثم [1, 1]',
   'C': '[1] ثم Error',
   'D': '[1, 1] ثم [1, 1, 1]'},
  'correct_answer': 'B'},
 {'id': 22,
  'question': '[سؤال 22] ما نوع الاستثناء الذي سيرفعه الكود التالي؟\n\ndef divide(a, b):\n    try:\n        return a / b\n    except:\n        raise\n\nprint(divide(5, 0))',
  'options': {'A': 'ZeroDivisionError',
   'B': 'NameError',
   'C': 'TypeError',
   'D': 'لا يحدث استثناء'},
  'correct_answer': 'A'},
 {'id': 23,
  'question': '[سؤال 23] ما ناتج تنفيذ الكود التالي؟\n\na = [1, 2, 3]\nb = a\na += [4, 5]\n\nprint(a)\nprint(b)',
  'options': {'A': '[1, 2, 3, 4, 5] ثم [1, 2, 3]',
   'B': '[1, 2, 3, 4, 5] ثم [1, 2, 3, 4, 5]',
   'C': '[1, 2, 3, 4, 5] ثم Error',
   'D': '[4, 5] ثم [1, 2, 3]'},
  'correct_answer': 'B'},
 {'id': 24,
  'question': '[سؤال 24] ما نتيجة هذا الكود؟\n\nx = (i*i for i in range(3))\nprint(sum(x) + sum(x))',
  'options': {'A': '5', 'B': '9', 'C': '0', 'D': '18'},
  'correct_answer': 'A'},
 {'id': 25,
  'question': '[سؤال 25] ما نوع البيانات الناتجة من تنفيذ التعبير التالي؟\n\nx = {1, 2, 3} & {2, 3, 4}',
  'options': {'A': 'list', 'B': 'set', 'C': 'tuple', 'D': 'dict'},
  'correct_answer': 'B'},
 {'id': 26,
  'question': '[سؤال 26] ما ناتج الكود التالي ولماذا؟\n\ndef func(x=[]):\n    x.append(1)\n    return x\n\nprint(func())\nprint(func())',
  'options': {'A': '[1] ثم [1]',
   'B': '[1] ثم [1, 1]',
   'C': '[1] ثم Error',
   'D': '[1, 1] ثم [1, 1, 1]'},
  'correct_answer': 'B'},
 {'id': 27,
  'question': '[سؤال 27] ما نوع الاستثناء الذي سيرفعه الكود التالي؟\n\ndef divide(a, b):\n    try:\n        return a / b\n    except:\n        raise\n\nprint(divide(5, 0))',
  'options': {'A': 'ZeroDivisionError',
   'B': 'NameError',
   'C': 'TypeError',
   'D': 'لا يحدث استثناء'},
  'correct_answer': 'A'},
 {'id': 28,
  'question': '[سؤال 28] ما ناتج تنفيذ الكود التالي؟\n\na = [1, 2, 3]\nb = a\na += [4, 5]\n\nprint(a)\nprint(b)',
  'options': {'A': '[1, 2, 3, 4, 5] ثم [1, 2, 3]',
   'B': '[1, 2, 3, 4, 5] ثم [1, 2, 3, 4, 5]',
   'C': '[1, 2, 3, 4, 5] ثم Error',
   'D': '[4, 5] ثم [1, 2, 3]'},
  'correct_answer': 'B'},
 {'id': 29,
  'question': '[سؤال 29] ما نتيجة هذا الكود؟\n\nx = (i*i for i in range(3))\nprint(sum(x) + sum(x))',
  'options': {'A': '5', 'B': '9', 'C': '0', 'D': '18'},
  'correct_answer': 'A'},
 {'id': 30,
  'question': '[سؤال 30] ما نوع البيانات الناتجة من تنفيذ التعبير التالي؟\n\nx = {1, 2, 3} & {2, 3, 4}',
  'options': {'A': 'list', 'B': 'set', 'C': 'tuple', 'D': 'dict'},
  'correct_answer': 'B'},
 {'id': 31,
  'question': '[سؤال 31] ما ناتج الكود التالي ولماذا؟\n\ndef func(x=[]):\n    x.append(1)\n    return x\n\nprint(func())\nprint(func())',
  'options': {'A': '[1] ثم [1]',
   'B': '[1] ثم [1, 1]',
   'C': '[1] ثم Error',
   'D': '[1, 1] ثم [1, 1, 1]'},
  'correct_answer': 'B'},
 {'id': 32,
  'question': '[سؤال 32] ما نوع الاستثناء الذي سيرفعه الكود التالي؟\n\ndef divide(a, b):\n    try:\n        return a / b\n    except:\n        raise\n\nprint(divide(5, 0))',
  'options': {'A': 'ZeroDivisionError',
   'B': 'NameError',
   'C': 'TypeError',
   'D': 'لا يحدث استثناء'},
  'correct_answer': 'A'},
 {'id': 33,
  'question': '[سؤال 33] ما ناتج تنفيذ الكود التالي؟\n\na = [1, 2, 3]\nb = a\na += [4, 5]\n\nprint(a)\nprint(b)',
  'options': {'A': '[1, 2, 3, 4, 5] ثم [1, 2, 3]',
   'B': '[1, 2, 3, 4, 5] ثم [1, 2, 3, 4, 5]',
   'C': '[1, 2, 3, 4, 5] ثم Error',
   'D': '[4, 5] ثم [1, 2, 3]'},
  'correct_answer': 'B'},
 {'id': 34,
  'question': '[سؤال 34] ما نتيجة هذا الكود؟\n\nx = (i*i for i in range(3))\nprint(sum(x) + sum(x))',
  'options': {'A': '5', 'B': '9', 'C': '0', 'D': '18'},
  'correct_answer': 'A'},
 {'id': 35,
  'question': '[سؤال 35] ما نوع البيانات الناتجة من تنفيذ التعبير التالي؟\n\nx = {1, 2, 3} & {2, 3, 4}',
  'options': {'A': 'list', 'B': 'set', 'C': 'tuple', 'D': 'dict'},
  'correct_answer': 'B'},
 {'id': 36,
  'question': '[سؤال 36] ما ناتج الكود التالي ولماذا؟\n\ndef func(x=[]):\n    x.append(1)\n    return x\n\nprint(func())\nprint(func())',
  'options': {'A': '[1] ثم [1]',
   'B': '[1] ثم [1, 1]',
   'C': '[1] ثم Error',
   'D': '[1, 1] ثم [1, 1, 1]'},
  'correct_answer': 'B'},
 {'id': 37,
  'question': '[سؤال 37] ما نوع الاستثناء الذي سيرفعه الكود التالي؟\n\ndef divide(a, b):\n    try:\n        return a / b\n    except:\n        raise\n\nprint(divide(5, 0))',
  'options': {'A': 'ZeroDivisionError',
   'B': 'NameError',
   'C': 'TypeError',
   'D': 'لا يحدث استثناء'},
  'correct_answer': 'A'},
 {'id': 38,
  'question': '[سؤال 38] ما ناتج تنفيذ الكود التالي؟\n\na = [1, 2, 3]\nb = a\na += [4, 5]\n\nprint(a)\nprint(b)',
  'options': {'A': '[1, 2, 3, 4, 5] ثم [1, 2, 3]',
   'B': '[1, 2, 3, 4, 5] ثم [1, 2, 3, 4, 5]',
   'C': '[1, 2, 3, 4, 5] ثم Error',
   'D': '[4, 5] ثم [1, 2, 3]'},
  'correct_answer': 'B'},
 {'id': 39,
  'question': '[سؤال 39] ما نتيجة هذا الكود؟\n\nx = (i*i for i in range(3))\nprint(sum(x) + sum(x))',
  'options': {'A': '5', 'B': '9', 'C': '0', 'D': '18'},
  'correct_answer': 'A'},
 {'id': 40,
  'question': '[سؤال 40] ما نوع البيانات الناتجة من تنفيذ التعبير التالي؟\n\nx = {1, 2, 3} & {2, 3, 4}',
  'options': {'A': 'list', 'B': 'set', 'C': 'tuple', 'D': 'dict'},
  'correct_answer': 'B'},
 {'id': 41,
  'question': '[سؤال 41] ما ناتج الكود التالي ولماذا؟\n\ndef func(x=[]):\n    x.append(1)\n    return x\n\nprint(func())\nprint(func())',
  'options': {'A': '[1] ثم [1]',
   'B': '[1] ثم [1, 1]',
   'C': '[1] ثم Error',
   'D': '[1, 1] ثم [1, 1, 1]'},
  'correct_answer': 'B'},
 {'id': 42,
  'question': '[سؤال 42] ما نوع الاستثناء الذي سيرفعه الكود التالي؟\n\ndef divide(a, b):\n    try:\n        return a / b\n    except:\n        raise\n\nprint(divide(5, 0))',
  'options': {'A': 'ZeroDivisionError',
   'B': 'NameError',
   'C': 'TypeError',
   'D': 'لا يحدث استثناء'},
  'correct_answer': 'A'},
 {'id': 43,
  'question': '[سؤال 43] ما ناتج تنفيذ الكود التالي؟\n\na = [1, 2, 3]\nb = a\na += [4, 5]\n\nprint(a)\nprint(b)',
  'options': {'A': '[1, 2, 3, 4, 5] ثم [1, 2, 3]',
   'B': '[1, 2, 3, 4, 5] ثم [1, 2, 3, 4, 5]',
   'C': '[1, 2, 3, 4, 5] ثم Error',
   'D': '[4, 5] ثم [1, 2, 3]'},
  'correct_answer': 'B'},
 {'id': 44,
  'question': '[سؤال 44] ما نتيجة هذا الكود؟\n\nx = (i*i for i in range(3))\nprint(sum(x) + sum(x))',
  'options': {'A': '5', 'B': '9', 'C': '0', 'D': '18'},
  'correct_answer': 'A'},
 {'id': 45,
  'question': '[سؤال 45] ما نوع البيانات الناتجة من تنفيذ التعبير التالي؟\n\nx = {1, 2, 3} & {2, 3, 4}',
  'options': {'A': 'list', 'B': 'set', 'C': 'tuple', 'D': 'dict'},
  'correct_answer': 'B'},
 {'id': 46,
  'question': '[سؤال 46] ما ناتج الكود التالي ولماذا؟\n\ndef func(x=[]):\n    x.append(1)\n    return x\n\nprint(func())\nprint(func())',
  'options': {'A': '[1] ثم [1]',
   'B': '[1] ثم [1, 1]',
   'C': '[1] ثم Error',
   'D': '[1, 1] ثم [1, 1, 1]'},
  'correct_answer': 'B'},
 {'id': 47,
  'question': '[سؤال 47] ما نوع الاستثناء الذي سيرفعه الكود التالي؟\n\ndef divide(a, b):\n    try:\n        return a / b\n    except:\n        raise\n\nprint(divide(5, 0))',
  'options': {'A': 'ZeroDivisionError',
   'B': 'NameError',
   'C': 'TypeError',
   'D': 'لا يحدث استثناء'},
  'correct_answer': 'A'},
 {'id': 48,
  'question': '[سؤال 48] ما ناتج تنفيذ الكود التالي؟\n\na = [1, 2, 3]\nb = a\na += [4, 5]\n\nprint(a)\nprint(b)',
  'options': {'A': '[1, 2, 3, 4, 5] ثم [1, 2, 3]',
   'B': '[1, 2, 3, 4, 5] ثم [1, 2, 3, 4, 5]',
   'C': '[1, 2, 3, 4, 5] ثم Error',
   'D': '[4, 5] ثم [1, 2, 3]'},
  'correct_answer': 'B'},
 {'id': 49,
  'question': '[سؤال 49] ما نتيجة هذا الكود؟\n\nx = (i*i for i in range(3))\nprint(sum(x) + sum(x))',
  'options': {'A': '5', 'B': '9', 'C': '0', 'D': '18'},
  'correct_answer': 'A'},
 {'id': 50,
  'question': '[سؤال 50] ما نوع البيانات الناتجة من تنفيذ التعبير التالي؟\n\nx = {1, 2, 3} & {2, 3, 4}',
  'options': {'A': 'list', 'B': 'set', 'C': 'tuple', 'D': 'dict'},
  'correct_answer': 'B'},
 {'id': 51,
  'question': '[سؤال 51] ما ناتج الكود التالي ولماذا؟\n\ndef func(x=[]):\n    x.append(1)\n    return x\n\nprint(func())\nprint(func())',
  'options': {'A': '[1] ثم [1]',
   'B': '[1] ثم [1, 1]',
   'C': '[1] ثم Error',
   'D': '[1, 1] ثم [1, 1, 1]'},
  'correct_answer': 'B'},
 {'id': 52,
  'question': '[سؤال 52] ما نوع الاستثناء الذي سيرفعه الكود التالي؟\n\ndef divide(a, b):\n    try:\n        return a / b\n    except:\n        raise\n\nprint(divide(5, 0))',
  'options': {'A': 'ZeroDivisionError',
   'B': 'NameError',
   'C': 'TypeError',
   'D': 'لا يحدث استثناء'},
  'correct_answer': 'A'},
 {'id': 53,
  'question': '[سؤال 53] ما ناتج تنفيذ الكود التالي؟\n\na = [1, 2, 3]\nb = a\na += [4, 5]\n\nprint(a)\nprint(b)',
  'options': {'A': '[1, 2, 3, 4, 5] ثم [1, 2, 3]',
   'B': '[1, 2, 3, 4, 5] ثم [1, 2, 3, 4, 5]',
   'C': '[1, 2, 3, 4, 5] ثم Error',
   'D': '[4, 5] ثم [1, 2, 3]'},
  'correct_answer': 'B'},
 {'id': 54,
  'question': '[سؤال 54] ما نتيجة هذا الكود؟\n\nx = (i*i for i in range(3))\nprint(sum(x) + sum(x))',
  'options': {'A': '5', 'B': '9', 'C': '0', 'D': '18'},
  'correct_answer': 'A'},
 {'id': 55,
  'question': '[سؤال 55] ما نوع البيانات الناتجة من تنفيذ التعبير التالي؟\n\nx = {1, 2, 3} & {2, 3, 4}',
  'options': {'A': 'list', 'B': 'set', 'C': 'tuple', 'D': 'dict'},
  'correct_answer': 'B'},
 {'id': 56,
  'question': '[سؤال 56] ما ناتج الكود التالي ولماذا؟\n\ndef func(x=[]):\n    x.append(1)\n    return x\n\nprint(func())\nprint(func())',
  'options': {'A': '[1] ثم [1]',
   'B': '[1] ثم [1, 1]',
   'C': '[1] ثم Error',
   'D': '[1, 1] ثم [1, 1, 1]'},
  'correct_answer': 'B'},
 {'id': 57,
  'question': '[سؤال 57] ما نوع الاستثناء الذي سيرفعه الكود التالي؟\n\ndef divide(a, b):\n    try:\n        return a / b\n    except:\n        raise\n\nprint(divide(5, 0))',
  'options': {'A': 'ZeroDivisionError',
   'B': 'NameError',
   'C': 'TypeError',
   'D': 'لا يحدث استثناء'},
  'correct_answer': 'A'},
 {'id': 58,
  'question': '[سؤال 58] ما ناتج تنفيذ الكود التالي؟\n\na = [1, 2, 3]\nb = a\na += [4, 5]\n\nprint(a)\nprint(b)',
  'options': {'A': '[1, 2, 3, 4, 5] ثم [1, 2, 3]',
   'B': '[1, 2, 3, 4, 5] ثم [1, 2, 3, 4, 5]',
   'C': '[1, 2, 3, 4, 5] ثم Error',
   'D': '[4, 5] ثم [1, 2, 3]'},
  'correct_answer': 'B'},
 {'id': 59,
  'question': '[سؤال 59] ما نتيجة هذا الكود؟\n\nx = (i*i for i in range(3))\nprint(sum(x) + sum(x))',
  'options': {'A': '5', 'B': '9', 'C': '0', 'D': '18'},
  'correct_answer': 'A'},
 {'id': 60,
  'question': '[سؤال 60] ما نوع البيانات الناتجة من تنفيذ التعبير التالي؟\n\nx = {1, 2, 3} & {2, 3, 4}',
  'options': {'A': 'list', 'B': 'set', 'C': 'tuple', 'D': 'dict'},
  'correct_answer': 'B'}]